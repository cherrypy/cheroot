name: Test suite

on:
  push:
  pull_request:
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      # max-parallel: 5
      fail-fast: false
      matrix:
        python-version:
        - 3.7
        - 3.6
        - 3.5
        - 2.7
        os:
        - ubuntu-latest
        - ubuntu-16.04
        - macOS-latest
        - windows-latest
        - windows-2016

    env:
      TOX_PARALLEL_NO_SPINNER: 1
      TOXENV: python

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('.pre-commit-config.yaml.failing') }}-${{ hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      run: |
        python -m pip install --upgrade tox tox-run-command
    - name: 'Initialize tox envs: ${{ matrix.env.TOXENV }}'
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --skip-missing-interpreters false
        --notest
    - name: Windows system info
      run: systeminfo
      if: >-
        startsWith(matrix.os, 'windows-')
    - name: >-
        Log platform.platform()
      run: >-
        python -m platform
    - name: >-
        Log platform.version()
      run: >-
        python -c "import platform;
        print(platform.version())"
    - name: >-
        Log platform.uname()
      run: >-
        python -c "import platform;
        print(platform.uname())"
    - name: >-
        Log platform.release()
      run: >-
        python -c "import platform;
        print(platform.release())"
    - name: Log stdlib OpenSSL version
      run: >-
        python -c
        "import ssl; print('\nOPENSSL_VERSION: '
        + ssl.OPENSSL_VERSION + '\nOPENSSL_VERSION_INFO: '
        + repr(ssl.OPENSSL_VERSION_INFO)
        + '\nOPENSSL_VERSION_NUMBER: '
        + repr(ssl.OPENSSL_VERSION_NUMBER))"
    - name: Log PyOpenSSL version
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --run-command
        "{envpython} -m OpenSSL.debug"
    - name: Test with tox
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
